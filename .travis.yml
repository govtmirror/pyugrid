language: python

env:
  - CONDA_PYTHON_VERSION="2"
  - CONDA_PYTHON_VERSION="3"

sudo: false

before_install:
  - if [[ "$CONDA_PYTHON_VERSION" == "2" ]]; then
      wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update conda
  - conda info -a
  - conda install conda-build jinja2

  # Hosts an "rtree" build.
  - conda config --add channels nesii/channel/ocgis

  # Used in conda "meta.yaml" for branch and repository agnostic git information.
  - export CBUILD_PYUGRID_GIT_URL=`git config --get remote.origin.url`
  - export CBUILD_PYUGRID_TAG=`git rev-parse --abbrev-ref HEAD`
  - export CBUILD_PYUGRID_VERSION=travis

  # Build the conda recipe.
  - conda build conda-recipe/.

  # Install test depedency.
  - conda install pytest

install:
  - conda install pyugrid --use-local

script:
  - export TEST_CMD="py.test --ignore=notebook_examples"
  # Test with mpi4py.
  - ${TEST_CMD}
  - mpiexec -n 2 py.test -m mpi4py --ignore=notebook_examples
  # Test w/out mpi4py.
  - conda remove mpi4py
  - ${TEST_CMD}
  # Test w/out GIS interoperability dependencies.
  - conda remove shapely fiona rtree
  # Test flexible mesh can import w/out optionals.
  - py.test test/test_flexible_mesh/test_init.py::test_imports_required
  # Test UGrid w/out optional dependencies.
  - py.test --ignore=notebook_examples --ignore=test/test_flexible_mesh

notifications:
    irc: "chat.freenode.net#renci"